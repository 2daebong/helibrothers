<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-3.2.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <util:properties id="properties" location="classpath:**/*.properties"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <context:component-scan base-package="com.helibrothers.dico"/>
    <jpa:repositories base-package="com.helibrothers.dico.core.repository" />

    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
        <property name="driverClassName" value="#{properties['db.driverClassName']}"/>
        <property name="url" value="#{properties['db.url']}"/>
        <property name="username" value="#{properties['db.username']}"/>
        <property name="password" value="#{properties['db.password']}"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.helibrothers.dico.domain"/>
        <property name="jpaVendorAdapter">
            <!-- 하이버네이트 구현체 사용 -->
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties"><!-- 하이버네이트 상세 설정 -->
            <props>
                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
                <!-- 방언 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <!-- SQL 보기 -->
                <prop key="hibernate.show_sql">true</prop>
                <!-- SQL 정렬해서 보기 -->
                <prop key="hibernate.format_sql">true</prop>
                <!-- SQL 코멘트 보기 -->
                <prop key="hibernate.use_sql_comments">true</prop>
                <!-- 새버전의 ID 생성 옵션 -->
                <prop key="hibernate.id.new_generator_mappings">true</prop>
                <!-- DDL 자동 생성 -->
                <prop key="hibernate.hbm2ddl.auto">validate</prop>

                <!-- *참고 DDL 생성 옵션
                - create : 기존 DDL을 제거하고 새로 생성한다.
                - create-drop : create + drop
                - update : 현재 데이터베이스 DDL과 비교해서 변경사항만 수정한다.
                - valdate : 현재 엔티티 매핑정보와 데이터베이스 스키마가 같은지 비교한다.
                다르면 경고를 남기고 애플리케이션을 실행하지 않는다. 이 설정은 DDL을 변경하지 않는다.
                -->
            </props>
        </property>
    </bean>

</beans>